*&---------------------------------------------------------------------*
*& Report ZBC405_19_ALV
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zbc405_19_alv.

TYPE-POOLS: col, icon.

*self-define type 선언
TYPES: BEGIN OF gty_sflight.
    INCLUDE TYPE sflight.
TYPES: light            TYPE c LENGTH 1,
       color            TYPE c LENGTH 4,
       it_field_colors  TYPE lvc_t_scol,
       changes_possible TYPE icon-id,
       END OF gty_sflight.

* self-define으로 만든 wa와 internal table
DATA: gt_sflight TYPE TABLE OF gty_sflight,
      gs_sflight TYPE gty_sflight.

* 구
*DATA: gt_flights TYPE TABLE OF sflight,
*      gs_flights LIKE LINE OF gt_flights.

* Create Container and Grid
DATA: go_container TYPE REF TO cl_gui_custom_container,
      go_alv_grid  TYPE REF TO cl_gui_alv_grid.

* Create Layout Variant
DATA: gv_variant TYPE disvariant,
      gv_save    TYPE c LENGTH 1.


* Layout 선언
DATA: gs_layout      TYPE lvc_s_layo,
      gs_field_color TYPE lvc_s_scol.

* Field Catalog
DATA: gs_field_cat TYPE lvc_s_fcat,
      gt_field_cat TYPE lvc_t_fcat.

* Print 선언
DATA: gs_print TYPE lvc_s_prnt.

DATA: ok_code TYPE sy-ucomm.

SELECT-OPTIONS: so_car FOR gs_sflight-carrid,
                so_con FOR gs_sflight-connid.
*                so_dat FOR gs_sflight-fldate.

SELECTION-SCREEN SKIP.
PARAMETERS: pa_lv TYPE disvariant-variant.

CLASS: lcl_handle DEFINITION.
  PUBLIC SECTION.
    CLASS-DATA: gv_rowid TYPE i.
    CLASS-METHODS: on_double_click
                  FOR EVENT double_click OF cl_gui_alv_grid
      IMPORTING es_row_no,
      on_toolbar
                    FOR EVENT toolbar OF cl_gui_alv_grid        " toolbar 정의, importing e_object
        IMPORTING e_object,
      on_user_commnad                                           " user command 정의 importing e_ucomm
                    FOR EVENT user_command OF cl_gui_alv_grid
        IMPORTING e_ucomm,
      on_context_menu_request
                    FOR EVENT context_menu_request OF cl_gui_alv_grid
        IMPORTING e_object,
      print_top FOR EVENT print_top_of_page OF cl_gui_alv_grid,
      print_tol FOR EVENT print_top_of_list OF cl_gui_alv_grid.


ENDCLASS.

* 클래스 구현 부분
CLASS: lcl_handle IMPLEMENTATION.

  METHOD on_double_click.
    DATA: lv_booking_total   TYPE i,
          lv_booking_total_c TYPE c LENGTH 10,
          lv_message_text    TYPE c LENGTH 60.

    READ TABLE gt_sflight INTO gs_sflight INDEX es_row_no-row_id.

    IF sy-subrc <> 0.
      MESSAGE i075(bc405_408).
      EXIT.
    ENDIF.

    lv_booking_total = gs_sflight-seatsocc + gs_sflight-seatsocc_b + gs_sflight-seatsocc_f.
    " 예약된 총 좌석 합산 - 이코노미, 비즈니스, 퍼스트클래스
    lv_booking_total_c = lv_booking_total.
    " 합산된 좌석을 문자열 형태로 저장
    CONCATENATE 'Total number of bookings :' lv_booking_total_c INTO lv_message_text SEPARATED BY ' '.
*    lv_message_text = 'Total number of bookings : ' && lv_booking_total_c.
    " 하나의 텍스트로 합치기 CONCATENATE 이용 또는 CHAR형 문자열 합치기

    MESSAGE lv_message_text TYPE 'I'. " I 타입의 메시지 형태로 텍스트 출력

  ENDMETHOD.
  "on toolbar 메소드
  METHOD on_toolbar.
    DATA ls_button TYPE stb_button.
    " Seperate
    ls_button-butn_type = 3. " 버튼 타입 3번이 세퍼레이트 긋기, 아이콘 사이의 세로 줄

    INSERT ls_button INTO TABLE e_object->mt_toolbar.
    " 실제 툴바 버튼 생성 구문
    CLEAR ls_button. " 중복 데이터 방지를 위한 clear
    ls_button-function = 'PERCENTAGE'.
    ls_button-text = '% (total)'.
    ls_button-quickinfo = 'Occupation (total)'.
    ls_button-butn_type = 0.
    INSERT ls_button INTO TABLE e_object->mt_toolbar.     " 생성한 툴바 버튼을 insert

    CLEAR ls_button. " 중복 방지 clear
    ls_button-function = 'PERCENTAGE_MARKED'.
    ls_button-text = '% (marked)'.
    ls_button-quickinfo = 'Occupation (marked flights)'.
    ls_button-butn_type = 0.
    INSERT ls_button INTO TABLE e_object->mt_toolbar.     " 생성한 툴바 버튼을 insert

  ENDMETHOD.
  " on User command 메소드
  METHOD on_user_commnad.
    DATA: lv_occupied   TYPE i,
          lv_capacity   TYPE i,
          lv_percentage TYPE p LENGTH 8 DECIMALS 1,
          lv_text       TYPE string,
          " context user command에 사용되는 carrname 선언
          lv_carrname   TYPE scarr-carrname,
          lv_planetype  TYPE sflight-planetype,   " 내가 임의로 추가한 planetype
          " 행을 선택 했을 때 식별하기 위한 행 넘버 선언
          lt_row_no     TYPE lvc_t_roid,
          ls_row_no     TYPE lvc_s_roid.

    " user command 실행 case 문
    CASE e_ucomm.
      WHEN 'PERCENTAGE'.
        LOOP AT gt_sflight INTO gs_sflight.
          lv_occupied = lv_occupied + gs_sflight-seatsocc.
          lv_capacity = lv_capacity + gs_sflight-seatsmax.
        ENDLOOP.
        lv_percentage = lv_occupied / lv_capacity * 100.

        MOVE lv_percentage TO lv_text.                      " 퍼센트 값을 문자형 text에 넣기
*        lv_text = 'Percentage of occupied seat : ' && ' ' && lv_text. " 문자열 합치기
        CONCATENATE 'Percentage of occupied seat : ' lv_text INTO lv_text SEPARATED BY ' '.

        MESSAGE lv_text TYPE 'I'.

      WHEN 'PERCENTAGE_MARKED'.
        " 선택 행 확인
        go_alv_grid->get_selected_rows(
        IMPORTING
          et_row_no = lt_row_no ).
        IF lines( lt_row_no ) > 0.
          LOOP AT lt_row_no INTO ls_row_no.
            READ TABLE gt_sflight INTO gs_sflight INDEX ls_row_no-row_id.
            lv_occupied = lv_occupied + gs_sflight-seatsocc.
            lv_capacity = lv_capacity + gs_sflight-seatsmax.

          ENDLOOP.
          lv_percentage = lv_occupied / lv_capacity * 100.

          MOVE lv_percentage TO lv_text.                      " 퍼센트 값을 문자형 text에 넣기
*         lv_text = 'Percentage of occupied seat : ' && ' ' && lv_text. " 문자열 합치기
          CONCATENATE 'Percentage of occupied seat : ' lv_text INTO lv_text SEPARATED BY ' '.

          MESSAGE lv_text TYPE 'I'.

        ELSE.
          MESSAGE 'Please mark at least one row' TYPE 'I'.

        ENDIF.
      WHEN 'CARRIER_INFO'.
        READ TABLE gt_sflight INTO gs_sflight INDEX gv_rowid.
        SELECT SINGLE carrname
          FROM scarr INTO lv_carrname
          WHERE carrid = gs_sflight-carrid.

        MESSAGE lv_carrname TYPE 'I'.

        " 내가 임의로 추가한 planetype_info
      WHEN 'PLANETYPE_INFO'.
        READ TABLE gt_sflight INTO gs_sflight INDEX gv_rowid.
        SELECT SINGLE planetype
          FROM sflight INTO lv_planetype
          WHERE planetype = gs_sflight-planetype.

        MESSAGE lv_planetype TYPE 'I'.

    ENDCASE.
  ENDMETHOD.
  " on context request 메소드 구현
  METHOD on_context_menu_request.
    DATA: ls_column_info TYPE lvc_s_col.

    go_alv_grid->get_current_cell(
    IMPORTING
      e_row = gv_rowid
      es_col_id = ls_column_info ).
    " 해당 컬럼의 필드를 선택 했을 때
    CASE ls_column_info-fieldname.
        " 필드이름이 CARRID 일 경우
      WHEN 'CARRID'.
        e_object->add_function(
        EXPORTING
          fcode = 'CARRIER_INFO'
          text = 'Carrier info' ).

        "내가 임의로 추가한 plane type info
        " 필드이름이 PLANETPYE 일 경우
      WHEN 'PLANETYPE'.
        e_object->add_function(
        EXPORTING
          fcode = 'PLANETYPE_INFO'
          text = 'Planetype info' ).
      WHEN OTHERS.
    ENDCASE.
  ENDMETHOD.
  METHOD print_tol.
    DATA: ls_so_car LIKE LINE OF so_car,
          ls_so_con LIKE LINE OF so_con.
    CONSTANTS: lc_end TYPE i VALUE 20.

    FORMAT COLOR COL_HEADING.

    WRITE: / 'Select options', AT lc_end space.
    SKIP.

    WRITE: / 'Airlines', AT lc_end space.
    ULINE AT /(lc_end).

    FORMAT COLOR COL_NORMAL.

    LOOP AT so_car INTO ls_so_car.
      WRITE: / ls_so_car-sign,
               ls_so_car-option,
               ls_so_car-low ,
               ls_so_car-high .

    ENDLOOP.

    SKIP.

    FORMAT COLOR COL_HEADING.
    WRITE: / 'Connections', AT lc_end space.
    ULINE AT /(lc_end).
    FORMAT COLOR COL_NORMAL.

    LOOP AT so_con INTO ls_so_con.
      WRITE: / ls_so_con-sign,
               ls_so_con-option,
               ls_so_con-low NO-ZERO,
               ls_so_con-high NO-ZERO.

    ENDLOOP.
    SKIP.
  ENDMETHOD.
  METHOD print_top.
    DATA lv_pos TYPE i.
    FORMAT COLOR COL_HEADING.
    WRITE: / sy-datum.         " 처음 현재 시간 출력
    lv_pos = sy-linsz / 2 - 3. " length of pagno : 6 chars
    WRITE AT lv_pos sy-pagno.  " 라인 띄우고 sy-pagno 출력
    lv_pos = sy-linsz - 11.    " length of username : 12 chars
    WRITE: AT lv_pos sy-uname. " lv_pos 만큼 라인 띄우고 sy-uname 출력
    ULINE.
  ENDMETHOD.

ENDCLASS.

START-OF-SELECTION.

  SELECT *
    FROM sflight INTO CORRESPONDING FIELDS OF TABLE gt_sflight
    WHERE carrid IN so_car
    AND   connid IN so_con.
*    AND   fldate IN so_dat.

  LOOP AT gt_sflight INTO gs_sflight.
    IF gs_sflight-planetype = '747-400'.
      gs_field_color-fname = 'PLANETYPE'.
      gs_field_color-color-col = col_positive.
      gs_field_color-color-int = 1.
      gs_field_color-color-inv = 0.
      APPEND  gs_field_color TO gs_sflight-it_field_colors.
    ENDIF.

*    MODIFY gt_sflight FROM gs_sflight TRANSPORTING light it_field_colors.

    IF gs_sflight-fldate(6) = sy-datum(6).
      gs_sflight-color = 'C' && col_negative && '01'.
    ENDIF.

*    MODIFY gt_sflight FROM gs_sflight TRANSPORTING light color.

    IF gs_sflight-seatsocc = 0.
      gs_sflight-light = '1'.                 " Red
    ELSEIF gs_sflight-seatsocc < 50.
      gs_sflight-light = '2'.                 " Yellow
    ELSE.
      gs_sflight-light = '3'.                 " Green
    ENDIF.

    IF gs_sflight-fldate < sy-datum.
      gs_sflight-changes_possible = icon_space.
    ELSE.
      gs_sflight-changes_possible = icon_okay.
    ENDIF.

    MODIFY gt_sflight FROM gs_sflight TRANSPORTING light
                                                   color
                                                   it_field_colors
                                                   changes_possible.

  ENDLOOP.


  CALL SCREEN 100.
*&---------------------------------------------------------------------*
*& Module STATUS_0100 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE status_0100 OUTPUT.
  SET PF-STATUS 'S0100'.
  SET TITLEBAR 'T0100'.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  EXIT  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE exit INPUT.
  CASE ok_code.
    WHEN 'EXIT'.
      LEAVE PROGRAM.
    WHEN 'CANC'.
      LEAVE TO SCREEN 0.
  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*& Module CLEAR_OK_CODE OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE clear_ok_code OUTPUT.
  CLEAR ok_code.
ENDMODULE.
*&---------------------------------------------------------------------*
*&      Module  USER_COMMAND_0100  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE user_command_0100 INPUT.
  CASE ok_code.
    WHEN 'BACK'.
      LEAVE TO SCREEN 0.
  ENDCASE.

ENDMODULE.
*&---------------------------------------------------------------------*
*& Module CREATE_AND_TRANSFER OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE create_and_transfer OUTPUT.
  IF go_container IS INITIAL.
    CREATE OBJECT go_container
      EXPORTING
        container_name = 'MY_CONTROL_AREA'
      EXCEPTIONS
        OTHERS         = 1.

    IF sy-subrc <> 0 AND sy-batch IS INITIAL.
      MESSAGE a001(zbc405_19).
    ENDIF.

    CREATE OBJECT go_alv_grid
      EXPORTING
        i_parent = go_container
      EXCEPTIONS
        OTHERS   = 1.

    IF sy-subrc <> 0.
      MESSAGE a001(zbc405_19).
    ENDIF.

    " Set hanlder 설정 - 매우 중요 이거 안하면 안나옴
    SET HANDLER: lcl_handle=>on_double_click         FOR go_alv_grid,        " double click 관련 이벤튼 set handler
                 lcl_handle=>on_toolbar              FOR go_alv_grid,        " toolbar      관련 이벤트 set handler
                 lcl_handle=>on_user_commnad         FOR go_alv_grid,        " user command 관련 이벤트 set handler
                 lcl_handle=>print_top               FOR go_alv_grid,        " Print        관련 이벤트 set Handler
                 lcl_handle=>print_tol               FOR go_alv_grid,        " Print        관련 이벤트 set Handler
                 lcl_handle=>on_context_menu_request FOR go_alv_grid.        " context req  관련 이벤트 set Handler

* Layout 부분 초기 값 설정 : 메소드를 부르기 전에 값을 설정

    gv_variant-report = sy-cprog.             " sy-cprog 입력 -> 이거 그냥 외워
    gv_variant-variant = pa_lv.               " 원하는 레이아웃을 바로 보기 위한 생성한 파라미터 설정

    "print 관련 메소드
    gs_print-prntlstinf = 'X'.                " print list info 출력 할지 말지
    gs_print-grpchgedit = 'X'.                " control level change format을 할지 말지

    gs_layout-grid_title = 'FLIGHT'.          " 타이틀 설정
    gs_layout-cwidth_opt = 'X'.               " 정렬
    gs_layout-excp_fname = 'LIGHT'.           " 신호등
    gs_layout-excp_led   = 'X'.               " 신호등에서 해당하는 것만 출력
    gs_layout-info_fname = 'COLOR'.           " row 컬러 설정
    gs_layout-sel_mode   = 'A'.               " 셀모드 설정
    gs_layout-ctab_fname = 'IT_FIELD_COLORS'. " 특정 필드 색깔 설정
    gs_layout-no_hgridln = 'X'.               " 세로 줄 숨김
    gs_layout-no_vgridln = 'X'.               " 가로 줄 숨김

    gs_field_cat-fieldname = 'SEATSOCC'.
    gs_field_cat-do_sum = 'X'.
    APPEND gs_field_cat TO gt_field_cat.

    CLEAR gs_field_cat.
    gs_field_cat-fieldname = 'PAYMENTSUM'.
    gs_field_cat-no_out = 'X'.
    APPEND gs_field_cat TO gt_field_cat.

    CLEAR gs_field_cat.
    gs_field_cat-fieldname = 'CHANGES_POSSIBLE'.
    gs_field_cat-col_pos = 5.
    gs_field_cat-coltext = 'Changes possible'.
    APPEND gs_field_cat TO gt_field_cat.


    CALL METHOD go_alv_grid->set_table_for_first_display
      EXPORTING
        i_structure_name = 'SFLIGHT'        " 불러올 테이블 입력
        is_variant       = gv_variant       " 선언한 variant 설정
        i_save           = 'A'              " save 권한 설정 U, X, A 중 하나
        is_layout        = gs_layout        " Layout 관련 설정
        is_print         = gs_print         " Print 관련 설정 => list output에서 sort관련 브레이킹을 걸 수 있음
      CHANGING
        it_outtab        = gt_sflight       " 인터널 테이블에 변경된 레이아웃 넣기
        it_fieldcatalog  = gt_field_cat
      EXCEPTIONS
        OTHERS           = 1.

    IF sy-subrc <> 0.
      MESSAGE a002(zbc405_19).
    ENDIF.

  ENDIF.
ENDMODULE.

*GUI Texts
*----------------------------------------------------------
* T0100 --> Flights


*Messages
*----------------------------------------------------------
*
* Message class: BC405_408
*075   Internal Error
*
* Message class: Hard coded
*   Please mark at least one row
*
* Message class: ZBC405_19
*001   Container Instance is not Data
*002   Not Calling Method

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2023. Sap Release 751
