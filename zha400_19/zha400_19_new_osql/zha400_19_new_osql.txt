*&---------------------------------------------------------------------*
*& Report ZHA400_NEW_OSQL_T1
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zha400_19_new_osql MESSAGE-ID zha400.


* Structure for Result
TYPES: BEGIN OF ty_s_carrier,
         carrid           TYPE scarr-carrid,
         carrname         TYPE scarr-carrname,
         currcode         TYPE scarr-currcode,
         revenue_first    TYPE ha400_revfst,
         revenue_business TYPE ha400_revbus,
         revenue_economy  TYPE ha400_reveco,
       END OF ty_s_carrier.

TYPES: ty_t_carriers TYPE STANDARD TABLE OF ty_s_carrier
                       WITH NON-UNIQUE KEY carrid.

* Data objects
DATA: gt_carriers   TYPE ty_t_carriers,
      gt_carriers_t LIKE gt_carriers.

* Database connection
DATA gv_dbcon TYPE dbcon-con_name.
CONSTANTS:
  c_primdb TYPE dbcon-con_name VALUE 'DEFAULT',
  c_secdb  TYPE dbcon-con_name VALUE 'HANADB'.

* selection screen
SELECTION-SCREEN BEGIN OF BLOCK exe WITH FRAME TITLE TEXT-exe.
PARAMETERS:
  pa_temp TYPE xfeld RADIOBUTTON GROUP exe DEFAULT 'X',
  pa_solu TYPE xfeld RADIOBUTTON GROUP exe,
  pa_both TYPE xfeld RADIOBUTTON GROUP exe.
SELECTION-SCREEN END OF BLOCK exe.

SELECTION-SCREEN BEGIN OF BLOCK dbc WITH FRAME TITLE TEXT-dbc.
PARAMETERS:
  pa_prim TYPE xfeld RADIOBUTTON GROUP dbc,
  pa_sec  TYPE xfeld RADIOBUTTON GROUP dbc DEFAULT 'X'.
SELECTION-SCREEN END OF BLOCK dbc.

START-OF-SELECTION.

  CASE 'X'.
    WHEN pa_prim.
      gv_dbcon = c_primdb.
    WHEN pa_sec.
      gv_dbcon = c_secdb.
  ENDCASE.

  CASE 'X'.
    WHEN pa_temp.  " template only
      PERFORM get_data_template USING    gv_dbcon
                                CHANGING gt_carriers_t.
      PERFORM display USING gt_carriers_t.
    WHEN pa_solu.  " solution only
      PERFORM get_data_solution USING    gv_dbcon
                                CHANGING gt_carriers.
      PERFORM display USING gt_carriers.
    WHEN pa_both.  " both subroutines
      PERFORM get_data_solution USING    gv_dbcon
                                CHANGING gt_carriers.
      PERFORM get_data_template USING    gv_dbcon
                                CHANGING gt_carriers_t.
      IF gt_carriers <> gt_carriers_t.
        MESSAGE i010.
      ELSE.
        MESSAGE s011.
      ENDIF.
  ENDCASE.

*&---------------------------------------------------------------------*
*&      Form  get_data_template
*&---------------------------------------------------------------------*
FORM get_data_template    USING pv_dbcon     TYPE dbcon-con_name
                       CHANGING ct_carriers TYPE ty_t_carriers.

  TYPES: BEGIN OF ty_s_scarr,
           carrid   TYPE scarr-carrid,
           carrname TYPE scarr-carrname,
           currcode TYPE scarr-currcode,
         END OF ty_s_scarr.
  TYPES: BEGIN OF ty_s_sbook,
           carrid    TYPE sbook-carrid,
           class     TYPE sbook-class,
           loccurkey TYPE sbook-loccurkey,
           loccuram  TYPE sbook-loccuram,
         END OF ty_s_sbook.

  DATA ls_carrier TYPE ty_s_carrier.

  DATA: lt_scarr TYPE SORTED TABLE OF ty_s_scarr
                      WITH UNIQUE KEY carrid,
        ls_scarr TYPE ty_s_scarr.

  DATA: lt_sbook TYPE SORTED TABLE OF ty_s_sbook
                      WITH NON-UNIQUE KEY carrid,
        ls_sbook TYPE ty_s_sbook.

* Classic Open SQL
  SELECT carrid carrname currcode
    FROM scarr
    CONNECTION (pv_dbcon)
    INTO TABLE lt_scarr.

  SELECT carrid class loccurkey loccuram
    FROM sbook
    CONNECTION (pv_dbcon)
    INTO TABLE lt_sbook
     WHERE cancelled <> 'X'.

  LOOP AT lt_scarr INTO ls_scarr.
    CLEAR ls_carrier.

    LOOP AT lt_sbook INTO ls_sbook
                     WHERE carrid = ls_scarr-carrid.
      IF ls_sbook-loccurkey <> ls_scarr-currcode.
        MESSAGE 'Inconsistent data' TYPE 'A'.
      ENDIF.
      CASE ls_sbook-class.
        WHEN 'F'.  "First Class Booking
          ls_carrier-revenue_first =         ls_carrier-revenue_first
                                           + ls_sbook-loccuram.
        WHEN 'C'. "Business Class Booking
          ls_carrier-revenue_business =      ls_carrier-revenue_business
                                           + ls_sbook-loccuram.
        WHEN 'Y'.  "Economy Class Booking
          ls_carrier-revenue_economy =       ls_carrier-revenue_economy
                                           + ls_sbook-loccuram.
      ENDCASE.
    ENDLOOP.
    MOVE-CORRESPONDING ls_scarr TO ls_carrier.
    APPEND ls_carrier TO ct_carriers.
  ENDLOOP.

ENDFORM.                    "
*&---------------------------------------------------------------------*
*&      Form  get_data_solution
*&---------------------------------------------------------------------*
FORM get_data_solution    USING pv_dbcon     TYPE dbcon-con_name
                       CHANGING ct_carriers TYPE ty_t_carriers.

  SELECT FROM scarr AS a LEFT OUTER JOIN sbook AS b ON a~carrid = b~carrid
    FIELDS a~carrid, a~carrname, a~currcode,
      SUM( CASE b~class
            WHEN 'F'  THEN b~loccuram
            ELSE 0
            END ) AS revenue_first,
      SUM( CASE b~class
            WHEN 'C'  THEN b~loccuram
            ELSE 0
            END ) AS revenue_business,
      SUM( CASE b~class
            WHEN 'Y'  THEN b~loccuram
            ELSE 0
            END ) AS revenue_economy
    WHERE b~cancelled <> 'X' OR b~cancelled IS NULL
    GROUP BY a~carrid, a~carrname, a~currcode
    ORDER BY a~carrid
    INTO CORRESPONDING FIELDS OF TABLE @ct_carriers
    CONNECTION (pv_dbcon).


** Classic SQL
*  SELECT a~carrid a~carrname a~currcode
*      SUM( b~loccuram ) AS revenue_first    "Sum only bookings with class = 'F'
*      SUM( b~loccuram ) AS revenue_business "Sum only bookings with class = 'C'
*      SUM( b~loccuram ) AS revenue_economy  "Sum only bookings with class = 'Y'
*    FROM scarr AS a LEFT OUTER JOIN sbook AS b
*            ON a~carrid = b~carrid
*    INTO TABLE ct_carriers
*    CONNECTION (pv_dbcon)
*    WHERE b~cancelled <> 'X' OR b~cancelled IS NULL
*  GROUP BY a~carrid a~carrname a~currcode
*  ORDER BY a~carrid.

ENDFORM.                    "

*&---------------------------------------------------------------------*
*&      Form  output
*&---------------------------------------------------------------------*

FORM display USING pt_carriers TYPE ty_t_carriers.

  DATA: lo_alv  TYPE REF TO cl_salv_table,
        lx_msg  TYPE REF TO cx_salv_msg,
        lv_text TYPE string.

* display
  TRY.
      cl_salv_table=>factory(
          IMPORTING
            r_salv_table = lo_alv
          CHANGING
            t_table      = pt_carriers ).

      lo_alv->display( ).

    CATCH cx_salv_msg INTO lx_msg.
      lv_text = lx_msg->get_text( ).
      MESSAGE lv_text TYPE 'E'.
  ENDTRY.

ENDFORM.                    "display


*Messages
*----------------------------------------------------------
*
* Message class: Hard coded
*   Inconsistent data
*
* Message class: ZHA400
*010   Difference data selected
*011   Same data selected

----------------------------------------------------------------------------------
Extracted by Mass Download version 1.5.5 - E.G.Mellodew. 1998-2023. Sap Release 751
